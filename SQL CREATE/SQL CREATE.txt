CREATE TABLE BOOK
(
ISBN           VARCHAR(12)     NOT NULL,
TITLE          VARCHAR(128)    NOT NULL,
CATEGORY       VARCHAR(32)     NOT NULL,
PUBLISHER      VARCHAR(64)     NOT NULL,
PUBLISHDATE    INT             NOT NULL,
PRIMARY KEY(ISBN)
);
CREATE TABLE AUTHOR
(
AUTHORID    CHAR(9)            NOT NULL,
NAME        VARCHAR(48)        NOT NULL,
PRIMARY KEY(AUTHORID)
);
CREATE TABLE WRITTEN_BY
(
AUTHORID    CHAR(9)           NOT NULL,
ISBN        VARCHAR(12)        NOT NULL,
PRIMARY KEY(AUTHORID, ISBN),
FOREIGN KEY(AUTHORID) REFERENCES AUTHOR(AUTHORID),
FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
);
CREATE TABLE CUSTOMER
(
CUSTOMERID    CHAR(9)        NOT NULL,
NAME          VARCHAR(48)    NOT NULL,
EMAIL         VARCHAR(64),
PHONE         CHAR(10),
ADDRESS       VARCHAR(64),
CITY          VARCHAR(32),
STATE         CHAR(2),
ZIP           CHAR(5),
SEX           CHAR(1),
PRIMARY KEY(CUSTOMERID)
);
CREATE TABLE EMPLOYEE
(
EMPLOYEEID    CHAR(9)        NOT NULL,
NAME          VARCHAR(48)    NOT NULL,
SALARY        INT            NOT NULL,
DEPARTMENT    VARCHAR(32),
PRIMARY KEY(EMPLOYEEID)
);
CREATE TABLE INVENTORY
(
ISBN              VARCHAR(12)    NOT NULL,
QUANTITY          INT            NOT NULL,
PURCHASE_PRICE    REAL           NOT NULL,
SELLING_PRICE     REAL           NOT NULL,
PRIMARY KEY(ISBN),
FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
);
CREATE TABLE CUSTOMER_PURCHASE_ORDER
(
TIN           CHAR(9)        NOT NULL,
TIME          TIMESTAMP      NOT NULL,
PRICE         REAL           NOT NULL,
QUANTITY      INT            NOT NULL,
ISBN          VARCHAR(12)    NOT NULL,
CUSTOMERID    CHAR(9),
EMPLOYEEID    CHAR(9)        NOT NULL,
PRIMARY KEY(TIN),
FOREIGN KEY(ISBN) REFERENCES INVENTORY(ISBN),
FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(CUSTOMERID),
FOREIGN KEY(EMPLOYEEID) REFERENCES EMPLOYEE(EMPLOYEEID)
);
CREATE TABLE BOOKSTORE_PURCHASE_ORDER
(
TIN           CHAR(9)        NOT NULL,
TIME          TIMESTAMP      NOT NULL,
PRICE         REAL           NOT NULL,
QUANTITY      INT            NOT NULL,
ISBN          VARCHAR(12)    NOT NULL,
EMPLOYEEID    CHAR(9)        NOT NULL,
PRIMARY KEY(TIN),
FOREIGN KEY(ISBN) REFERENCES INVENTORY(ISBN),
FOREIGN KEY(EMPLOYEEID) REFERENCES EMPLOYEE(EMPLOYEEID));

CREATE UNIQUE INDEX ID_RETRIEVE ON CUSTOMER_PURCHASE_ORDER (CustomerId,EmployeeID);

CREATE VIEW BOOKS_SOLD_OVER_5
            	AS       	SELECT B.Isbn, B.Title, sum(P.Quantity)
                            	FROM BOOK B, CUSTOMER_PURCHASE_ORDER P
                            	WHERE B.Isbn = P.Isbn
                            	GROUP BY B.Isbn, B.Title
                            	HAVING sum(P.Quantity) > 5;

CREATE VIEW CUSTOMERS_PURCHASE
            	AS       	 SELECT C.CustomerId, C.Name, sum(P.quantity)
                            	FROM CUSTOMER C, CUSTOMER_PURCHASE_ORDER P
                            	WHERE C.CustomerId = P.CustomerId
                            	GROUP BY C.CustomerId, C.Name
                            	HAVING sum(P.Quantity) > 3;

CREATE VIEW EMPLOYEE_SOLD
            	AS       	 SELECT E.EmployeeId, E.Name, E.SALARY, sum(P.Quantity)
		FROM EMPLOYEE E,  CUSTOMER_PURCHASE_ORDER P
		WHERE E.EmployeeId = P.EmployeeId
		GROUP BY E.EmployeeId
		HAVING sum(P.Quantity) > 10;





